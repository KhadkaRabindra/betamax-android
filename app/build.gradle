buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.firebase.crashlytics'
    id 'dagger.hilt.android.plugin'
}

repositories {
    maven {
        url 'https://maven.google.com'
    }
    mavenCentral()
}

def keystoreProperties = new Properties()
try {
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} catch (IOException ignored) {
    // ignore if keystore is missing
}

def localProperties = new Properties()
try {
    def localPropertiesFile = rootProject.file("local.properties")
    localProperties.load(new FileInputStream(localPropertiesFile))
} catch (IOException ignored) {
    // ignore if local properties is missing
}

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "app.betamax.android"
        minSdkVersion 22
        targetSdkVersion 33
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "SECRET_API_KEY", "\"${localProperties.getProperty("SECRET_API_KEY")}\""
        buildConfigField "String", "BASE_URL", "\"${localProperties.getProperty("BASE_URL")}\""
        buildConfigField "String", "ONESIGNAL_APP_ID", "\"${localProperties.getProperty("ONESIGNAL_APP_ID")}\""
    }

    signingConfigs {
        release {
            if (keystoreProperties['STORE_FILE']) {
                storeFile rootProject.file(keystoreProperties['STORE_FILE'])
                storePassword keystoreProperties['STORE_PASSWORD']
                keyAlias keystoreProperties['KEY_ALIAS']
                keyPassword keystoreProperties['KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "PAYPAL_CLIENT_ID", "\"${localProperties.getProperty("PAYPAL_SANDBOX_CLIENT_ID")}\""
            buildConfigField "String", "PAYPAL_SECRET_KEY", "\"${localProperties.getProperty("PAYPAL_SANDBOX_SECRET_KEY")}\""
        }
        release {
            buildConfigField "String", "PAYPAL_CLIENT_ID", "\"${localProperties.getProperty("PAYPAL_CLIENT_ID")}\""
            buildConfigField "String", "PAYPAL_SECRET_KEY", "\"${localProperties.getProperty("PAYPAL_SECRET_KEY")}\""

            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:1.9.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // activity
    def activity_version = "1.6.1"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:1.5.5"

    // lifecycle
    def lifecycle_version = "2.6.0-alpha02"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // coroutines
    def coroutines_version = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // networking
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'

    // dagger hilt
    def dagger_version = "2.38.1"
    implementation "com.google.dagger:hilt-android:$dagger_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // datastore
    def datastore_version = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    // work manager
    def work_version = "2.8.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // firebase
    def firebase_version = "30.4.1"
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging'

    // onesignal
    implementation 'com.onesignal:OneSignal:[4.0.0, 4.99.99]'

    // browser
    def browser_version = "1.5.0"
    implementation "androidx.browser:browser:$browser_version"

    // exo player
    def exoplayer_version = "2.18.3"
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer_version"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer_version"

    // 3rd party libs
    implementation 'me.relex:circleindicator:2.1.6'
    implementation 'com.github.androidmads:QRGenerator:1.0.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.facebook.fresco:fresco:2.6.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.airbnb.android:lottie:5.0.3'

    // unit testing
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'junit:junit:4.13.2'
}

apply plugin: 'com.google.gms.google-services'